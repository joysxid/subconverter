name: GitHub CI
on:
  push:
    branches: [master]
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  linux32_build:
    name: Linux x86 Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add commit id into version
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
      - name: Build
        run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:x86-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"

      - name: Package Release
        run: tar czf subconverter_linux32.tar.gz subconverter

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            subconverter_*.tar.gz

      - name: Draft Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
        with:
          files: subconverter_linux32.tar.gz
          draft: true
          tag_name: Alpha

  linux64_build:
    name: Linux x86_64 Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add commit id into version
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
      - name: Build
        run: docker run -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:amd64-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"

      - name: Package Release
        run: tar czf subconverter_linux64.tar.gz subconverter

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            subconverter_*.tar.gz

      - name: Draft Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
        with:
          files: subconverter_linux64.tar.gz
          draft: true
          tag_name: Alpha


 
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            subconverter_*.7z


        tag_name: Alpha
        files: bin/*
        generate_release_notes: true

  Upload-Release:
  permissions: write-all
  if: ${{ github.ref_type == 'branch' }}
  needs:
    [
      linux64_build,
      linux32_build
    ]
  runs-on: ubuntu-latest
  steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: bin/

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: bin

    - name: Tag Repo
      uses: actions/github-script@v6
      with:
        script: |
          const tagName = 'Alpha';
          const ref = `refs/tags/${tagName}`;
          const sha = '${{ github.sha }}';

          const { Octokit } = require("@octokit/rest");
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

          // Check if the tag already exists
          let tagExists = false;
          try {
            await octokit.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${tagName}`
            });
            tagExists = true;
          } catch (error) {
            if (error.status !== 404) {
              throw error;
            }
          }

          // Delete the tag if it already exists
          if (tagExists) {
            await octokit.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${tagName}`
            });
          }

          // Create the tag
          await octokit.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref,
            sha
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release
      uses: softprops/action-gh-release@v1
      if: ${{ success() }}
      with:
        tag_name: Alpha
        files: bin/*
        generate_release_notes: true
